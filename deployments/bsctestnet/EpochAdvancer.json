{
  "address": "0x73097d9EAA1dD8d89BC2AcfE56F11957c6BfBCc1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "addPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "advanceEpochs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x87b2b0524c6220a6f7431b5f9341a5da52f1242a856b90bf08e3387b24887da5",
  "receipt": {
    "to": null,
    "from": "0xB011D306D36c396847bA42b1c7AEb8E96C540d9a",
    "contractAddress": "0x73097d9EAA1dD8d89BC2AcfE56F11957c6BfBCc1",
    "transactionIndex": 2,
    "gasUsed": "714052",
    "logsBloom": "0x
    "blockHash": "0xfa72dfe47d4a2ec1758692ab150c9711a5c3e53f7030f9429831b1340c716b92",
    "transactionHash": "0x87b2b0524c6220a6f7431b5f9341a5da52f1242a856b90bf08e3387b24887da5",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 12932477,
        "transactionHash": "0x87b2b0524c6220a6f7431b5f9341a5da52f1242a856b90bf08e3387b24887da5",
        "address": "0x73097d9EAA1dD8d89BC2AcfE56F11957c6BfBCc1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b011d306d36c396847ba42b1c7aeb8e96c540d9a"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0xfa72dfe47d4a2ec1758692ab150c9711a5c3e53f7030f9429831b1340c716b92"
      }
    ],
    "blockNumber": 12932477,
    "cumulativeGasUsed": "1054088",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xF759b75366deA4b5c9982DC71C48c308e487d131"
    ]
  ],
  "solcInputHash": "1423f1c3a8ce78374bbc058f7c11de70",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"addPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advanceEpochs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EpochAdvancer.sol\":\"EpochAdvancer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/EpochAdvancer.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ISmartAlpha.sol\\\";\\n\\ncontract EpochAdvancer is Ownable {\\n    address[] public pools;\\n    uint256 public numberOfPools;\\n\\n    constructor(address[] memory addrs) {\\n        if (addrs.length > 0) {\\n            addPools(addrs);\\n        }\\n    }\\n\\n    function addPool(address poolAddress) public onlyOwner {\\n        require(poolAddress != address(0), \\\"invalid address\\\");\\n\\n        pools.push(poolAddress);\\n        numberOfPools++;\\n    }\\n\\n    function addPools(address[] memory addrs) public onlyOwner {\\n        require(addrs.length > 0, \\\"invalid array\\\");\\n\\n        for (uint256 i = 0; i < addrs.length; i++) {\\n            addPool(addrs[i]);\\n        }\\n    }\\n\\n    function advanceEpochs() public {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            ISmartAlpha sa = ISmartAlpha(pools[i]);\\n\\n            if (sa.getCurrentEpoch() > sa.epoch()) {\\n                if (gasleft() < 400_000) {\\n                    break;\\n                }\\n\\n                sa.advanceEpoch();\\n            }\\n        }\\n    }\\n\\n    function checkUpkeep(bytes calldata /* checkData */) external view returns (bool, bytes memory) {\\n        bool upkeepNeeded;\\n\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            ISmartAlpha sa = ISmartAlpha(pools[i]);\\n\\n            if (sa.getCurrentEpoch() > sa.epoch()) {\\n                upkeepNeeded = true;\\n                break;\\n            }\\n        }\\n\\n        return (upkeepNeeded, \\\"\\\");\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external {\\n        advanceEpochs();\\n    }\\n}\\n\",\"keccak256\":\"0x87491a9d67c9b1a6d81c7b2caac6ee6be0924e84f9e4c1849788db6368730935\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ISmartAlpha.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\ninterface ISmartAlpha {\\n    function epoch() external view returns (uint256);\\n    function getCurrentEpoch() external view returns (uint256);\\n    function advanceEpoch() external;\\n}\\n\",\"keccak256\":\"0x3d977fd3182a938fea5c8644dfc5fa128450e5763ed3b00d8c58c74d9b476d96\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e1238038062000e12833981016040819052620000349162000287565b6200003f3362000059565b80511562000052576200005281620000a9565b50620003eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33620000b46200017c565b6001600160a01b031614620000e65760405162461bcd60e51b8152600401620000dd9062000360565b60405180910390fd5b6000815111620001295760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420617272617960981b6044820152606401620000dd565b60005b81518110156200017857620001638282815181106200014f576200014f620003bf565b60200260200101516200018b60201b60201c565b806200016f8162000395565b9150506200012c565b5050565b6000546001600160a01b031690565b33620001966200017c565b6001600160a01b031614620001bf5760405162461bcd60e51b8152600401620000dd9062000360565b6001600160a01b038116620002095760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b6044820152606401620000dd565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0384161790556002805491620002628362000395565b919050555050565b80516001600160a01b03811681146200028257600080fd5b919050565b600060208083850312156200029b57600080fd5b82516001600160401b0380821115620002b357600080fd5b818501915085601f830112620002c857600080fd5b815181811115620002dd57620002dd620003d5565b8060051b604051601f19603f83011681018181108582111715620003055762000305620003d5565b604052828152858101935084860182860187018a10156200032557600080fd5b600095505b8386101562000353576200033e816200026a565b8552600195909501949386019386016200032a565b5098975050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415620003b857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610a1780620003fb6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80633bd54b47146100935780634585e33b1461009d5780636e04ff0d146100b05780636f682a53146100da578063715018a6146100f15780638da5cb5b146100f9578063ac4afa3814610119578063b36a4ab11461012c578063d914cd4b1461013f578063f2fde38b14610152575b600080fd5b61009b610165565b005b61009b6100ab366004610855565b6102fb565b6100c36100be366004610855565b610307565b6040516100d19291906108f8565b60405180910390f35b6100e360025481565b6040519081526020016100d1565b61009b610460565b6101016104a4565b6040516001600160a01b0390911681526020016100d1565b6101016101273660046108c6565b6104b3565b61009b61013a36600461078a565b6104dd565b61009b61014d366004610768565b61058d565b61009b610160366004610768565b610663565b60005b6001548110156102f857600060018281548110610187576101876109b5565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b1580156101d357600080fd5b505afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b91906108df565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561024457600080fd5b505afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c91906108df565b11156102e55762061a805a1015610291575050565b806001600160a01b0316633cf80e6c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b505050505b50806102f08161098c565b915050610168565b50565b610303610165565b5050565b6000606081805b6001548110156104455760006001828154811061032d5761032d6109b5565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b191906108df565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042291906108df565b1115610432576001925050610445565b508061043d8161098c565b91505061030e565b50604080516020810190915260008152909590945092505050565b336104696104a4565b6001600160a01b0316146104985760405162461bcd60e51b815260040161048f90610957565b60405180910390fd5b6104a260006106fc565b565b6000546001600160a01b031690565b600181815481106104c357600080fd5b6000918252602090912001546001600160a01b0316905081565b336104e66104a4565b6001600160a01b03161461050c5760405162461bcd60e51b815260040161048f90610957565b600081511161054d5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420617272617960981b604482015260640161048f565b60005b81518110156103035761057b82828151811061056e5761056e6109b5565b602002602001015161058d565b806105858161098c565b915050610550565b336105966104a4565b6001600160a01b0316146105bc5760405162461bcd60e51b815260040161048f90610957565b6001600160a01b0381166106045760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015260640161048f565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416179055600280549161065b8361098c565b919050555050565b3361066c6104a4565b6001600160a01b0316146106925760405162461bcd60e51b815260040161048f90610957565b6001600160a01b0381166106f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048f565b6102f8815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461076357600080fd5b919050565b60006020828403121561077a57600080fd5b6107838261074c565b9392505050565b6000602080838503121561079d57600080fd5b82356001600160401b03808211156107b457600080fd5b818501915085601f8301126107c857600080fd5b8135818111156107da576107da6109cb565b8060051b604051601f19603f830116810181811085821117156107ff576107ff6109cb565b604052828152858101935084860182860187018a101561081e57600080fd5b600095505b83861015610848576108348161074c565b855260019590950194938601938601610823565b5098975050505050505050565b6000806020838503121561086857600080fd5b82356001600160401b038082111561087f57600080fd5b818501915085601f83011261089357600080fd5b8135818111156108a257600080fd5b8660208285010111156108b457600080fd5b60209290920196919550909350505050565b6000602082840312156108d857600080fd5b5035919050565b6000602082840312156108f157600080fd5b5051919050565b821515815260006020604081840152835180604085015260005b8181101561092e57858101830151858201606001528201610912565b81811115610940576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006000198214156109ae57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bcd56c9a6ec4e7cfd0159e617d487806b052547957b2fe30a856682df91d3b1164736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008e5760003560e01c80633bd54b47146100935780634585e33b1461009d5780636e04ff0d146100b05780636f682a53146100da578063715018a6146100f15780638da5cb5b146100f9578063ac4afa3814610119578063b36a4ab11461012c578063d914cd4b1461013f578063f2fde38b14610152575b600080fd5b61009b610165565b005b61009b6100ab366004610855565b6102fb565b6100c36100be366004610855565b610307565b6040516100d19291906108f8565b60405180910390f35b6100e360025481565b6040519081526020016100d1565b61009b610460565b6101016104a4565b6040516001600160a01b0390911681526020016100d1565b6101016101273660046108c6565b6104b3565b61009b61013a36600461078a565b6104dd565b61009b61014d366004610768565b61058d565b61009b610160366004610768565b610663565b60005b6001548110156102f857600060018281548110610187576101876109b5565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b1580156101d357600080fd5b505afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b91906108df565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561024457600080fd5b505afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c91906108df565b11156102e55762061a805a1015610291575050565b806001600160a01b0316633cf80e6c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b505050505b50806102f08161098c565b915050610168565b50565b610303610165565b5050565b6000606081805b6001548110156104455760006001828154811061032d5761032d6109b5565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561037957600080fd5b505afa15801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b191906108df565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042291906108df565b1115610432576001925050610445565b508061043d8161098c565b91505061030e565b50604080516020810190915260008152909590945092505050565b336104696104a4565b6001600160a01b0316146104985760405162461bcd60e51b815260040161048f90610957565b60405180910390fd5b6104a260006106fc565b565b6000546001600160a01b031690565b600181815481106104c357600080fd5b6000918252602090912001546001600160a01b0316905081565b336104e66104a4565b6001600160a01b03161461050c5760405162461bcd60e51b815260040161048f90610957565b600081511161054d5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420617272617960981b604482015260640161048f565b60005b81518110156103035761057b82828151811061056e5761056e6109b5565b602002602001015161058d565b806105858161098c565b915050610550565b336105966104a4565b6001600160a01b0316146105bc5760405162461bcd60e51b815260040161048f90610957565b6001600160a01b0381166106045760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b604482015260640161048f565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038416179055600280549161065b8361098c565b919050555050565b3361066c6104a4565b6001600160a01b0316146106925760405162461bcd60e51b815260040161048f90610957565b6001600160a01b0381166106f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048f565b6102f8815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461076357600080fd5b919050565b60006020828403121561077a57600080fd5b6107838261074c565b9392505050565b6000602080838503121561079d57600080fd5b82356001600160401b03808211156107b457600080fd5b818501915085601f8301126107c857600080fd5b8135818111156107da576107da6109cb565b8060051b604051601f19603f830116810181811085821117156107ff576107ff6109cb565b604052828152858101935084860182860187018a101561081e57600080fd5b600095505b83861015610848576108348161074c565b855260019590950194938601938601610823565b5098975050505050505050565b6000806020838503121561086857600080fd5b82356001600160401b038082111561087f57600080fd5b818501915085601f83011261089357600080fd5b8135818111156108a257600080fd5b8660208285010111156108b457600080fd5b60209290920196919550909350505050565b6000602082840312156108d857600080fd5b5035919050565b6000602082840312156108f157600080fd5b5051919050565b821515815260006020604081840152835180604085015260005b8181101561092e57858101830151858201606001528201610912565b81811115610940576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006000198214156109ae57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bcd56c9a6ec4e7cfd0159e617d487806b052547957b2fe30a856682df91d3b1164736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1304,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "pools",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1306,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "numberOfPools",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}