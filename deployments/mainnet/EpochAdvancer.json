{
  "address": "0x7a40cE00875Ce3033517516ac690E9E91fB4BDaF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_gasPerPool",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "addPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "advanceEpochs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPerPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "removePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newGasPerPool",
          "type": "uint256"
        }
      ],
      "name": "setGasPerPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xadab71b91774764b1b26d2e9459198c80e2bd918bc6ff19130a46704d7e9dee3",
  "receipt": {
    "to": null,
    "from": "0x558Ef269Bcc4cc9F2e14E3f4301231fbeb85d95F",
    "contractAddress": "0x7a40cE00875Ce3033517516ac690E9E91fB4BDaF",
    "transactionIndex": 91,
    "gasUsed": "1114609",
    "logsBloom": "0x
    "blockHash": "0x041730f605153811b7d1047ae50704b728bf4a504cdf9716a89e381fc541a257",
    "transactionHash": "0xadab71b91774764b1b26d2e9459198c80e2bd918bc6ff19130a46704d7e9dee3",
    "logs": [
      {
        "transactionIndex": 91,
        "blockNumber": 14165234,
        "transactionHash": "0xadab71b91774764b1b26d2e9459198c80e2bd918bc6ff19130a46704d7e9dee3",
        "address": "0x7a40cE00875Ce3033517516ac690E9E91fB4BDaF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000558ef269bcc4cc9f2e14e3f4301231fbeb85d95f"
        ],
        "data": "0x",
        "logIndex": 88,
        "blockHash": "0x041730f605153811b7d1047ae50704b728bf4a504cdf9716a89e381fc541a257"
      }
    ],
    "blockNumber": 14165234,
    "cumulativeGasUsed": "6205452",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x31f7Da25361AD99ca4DAa4E8709624660f324F48",
      "0x13d5387389Ac1a3b72391D88b03B893a945B17cd",
      "0xB0105F829d50841B949C274636C2D173a78DB7e0",
      "0x0b2BCde6a404c53c05A6c0F5402daEd4f2dD5779",
      "0x21f768446a171f50A20C727E420981AD70e0E9d9",
      "0xeCa0ffc5E3566e9dAD05f206F2Ca1fF0174AF476",
      "0x6ACb5F6D4C7E2ca6FE3B7cac13cA6B3Ea6c9eE01"
    ],
    400000
  ],
  "solcInputHash": "bc169e59be8788b2b2b8ca2c0c346610",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_gasPerPool\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"addPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advanceEpochs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"removePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newGasPerPool\",\"type\":\"uint256\"}],\"name\":\"setGasPerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EpochAdvancer.sol\":\"EpochAdvancer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/EpochAdvancer.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ISmartAlpha.sol\\\";\\n\\ncontract EpochAdvancer is Ownable {\\n    address[] public pools;\\n    uint256 public numberOfPools;\\n\\n    uint256 public gasPerPool; // on mainnet it should be about 400_000\\n\\n    constructor(address[] memory addrs, uint256 _gasPerPool){\\n        gasPerPool = _gasPerPool;\\n        if (addrs.length > 0) {\\n            addPools(addrs);\\n        }\\n    }\\n\\n    function addPool(address poolAddress) public onlyOwner {\\n        require(poolAddress != address(0), \\\"invalid address\\\");\\n\\n        pools.push(poolAddress);\\n        numberOfPools++;\\n    }\\n\\n    function removePool(address poolAddress) public onlyOwner {\\n        require(poolAddress != address(0), \\\"invalid address\\\");\\n\\n        for (uint256 i = 0; i < numberOfPools; i++) {\\n            if (pools[i] == poolAddress) {\\n                pools[i] = pools[pools.length - 1];\\n                pools.pop();\\n                numberOfPools--;\\n                return;\\n            }\\n        }\\n    }\\n\\n    function addPools(address[] memory addrs) public onlyOwner {\\n        require(addrs.length > 0, \\\"invalid array\\\");\\n\\n        for (uint256 i = 0; i < addrs.length; i++) {\\n            addPool(addrs[i]);\\n        }\\n    }\\n\\n    function removePools(address[] memory addrs) public onlyOwner {\\n        require(addrs.length > 0, \\\"invalid array\\\");\\n\\n        for (uint256 i = 0; i < addrs.length; i++) {\\n            removePool(addrs[i]);\\n        }\\n    }\\n\\n    function setGasPerPool(uint256 _newGasPerPool) public onlyOwner {\\n        gasPerPool = _newGasPerPool;\\n    }\\n\\n    function advanceEpochs() public {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            ISmartAlpha sa = ISmartAlpha(pools[i]);\\n\\n            if (sa.getCurrentEpoch() > sa.epoch()) {\\n                if (gasleft() < gasPerPool) {\\n                    break;\\n                }\\n\\n                sa.advanceEpoch();\\n            }\\n        }\\n    }\\n\\n    function getPools() public view returns (address[] memory) {\\n        address[] memory result = new address[](pools.length);\\n\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            result[i] = pools[i];\\n        }\\n\\n        return result;\\n    }\\n\\n    function checkUpkeep(bytes calldata /* checkData */) external view returns (bool, bytes memory) {\\n        bool upkeepNeeded;\\n\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            ISmartAlpha sa = ISmartAlpha(pools[i]);\\n\\n            if (sa.getCurrentEpoch() > sa.epoch()) {\\n                upkeepNeeded = true;\\n                break;\\n            }\\n        }\\n\\n        return (upkeepNeeded, \\\"\\\");\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external {\\n        advanceEpochs();\\n    }\\n}\\n\",\"keccak256\":\"0xcd3aeef9e973aa07c3d1b2031bb5f79ebe8b39c09df8b213dae99c6736d1546d\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ISmartAlpha.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\ninterface ISmartAlpha {\\n    function epoch() external view returns (uint256);\\n    function getCurrentEpoch() external view returns (uint256);\\n    function advanceEpoch() external;\\n}\\n\",\"keccak256\":\"0x3d977fd3182a938fea5c8644dfc5fa128450e5763ed3b00d8c58c74d9b476d96\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012543803806200125483398101604081905262000034916200028d565b6200003f336200005f565b600381905581511562000057576200005782620000af565b5050620003f9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33620000ba62000182565b6001600160a01b031614620000ec5760405162461bcd60e51b8152600401620000e3906200036e565b60405180910390fd5b60008151116200012f5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420617272617960981b6044820152606401620000e3565b60005b81518110156200017e5762000169828281518110620001555762000155620003cd565b60200260200101516200019160201b60201c565b806200017581620003a3565b91505062000132565b5050565b6000546001600160a01b031690565b336200019c62000182565b6001600160a01b031614620001c55760405162461bcd60e51b8152600401620000e3906200036e565b6001600160a01b0381166200020f5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b6044820152606401620000e3565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03841617905560028054916200026883620003a3565b919050555050565b80516001600160a01b03811681146200028857600080fd5b919050565b60008060408385031215620002a157600080fd5b82516001600160401b0380821115620002b957600080fd5b818501915085601f830112620002ce57600080fd5b8151602082821115620002e557620002e5620003e3565b8160051b604051601f19603f830116810181811086821117156200030d576200030d620003e3565b604052838152828101945085830182870184018b10156200032d57600080fd5b600096505b848710156200035b57620003468162000270565b86526001969096019594830194830162000332565b5097909101519698969750505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415620003c657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610e4b80620004096000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80630b41672c146100ca5780633b7d0946146100df5780633bd54b47146100f25780634585e33b146100fa5780634b1641401461010d578063673a2a1f146101205780636e04ff0d1461013e5780636f682a531461015f578063715018a6146101765780638da5cb5b1461017e5780638f6675731461019e578063ac4afa38146101a7578063b36a4ab1146101ba578063d914cd4b146101cd578063f2fde38b146101e0575b600080fd5b6100dd6100d8366004610c11565b6101f3565b005b6100dd6100ed366004610ab3565b610230565b6100dd6103a7565b6100dd610108366004610ba0565b610539565b6100dd61011b366004610ad5565b610541565b6101286105d1565b6040516101359190610c43565b60405180910390f35b61015161014c366004610ba0565b61069d565b604051610135929190610c90565b61016860025481565b604051908152602001610135565b6100dd6107f6565b610186610831565b6040516001600160a01b039091168152602001610135565b61016860035481565b6101866101b5366004610c11565b610840565b6100dd6101c8366004610ad5565b61086a565b6100dd6101db366004610ab3565b6108fa565b6100dd6101ee366004610ab3565b6109ae565b336101fc610831565b6001600160a01b03161461022b5760405162461bcd60e51b815260040161022290610d3f565b60405180910390fd5b600355565b33610239610831565b6001600160a01b03161461025f5760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b0381166102855760405162461bcd60e51b815260040161022290610cef565b60005b6002548110156103a257816001600160a01b0316600182815481106102af576102af610de9565b6000918252602090912001546001600160a01b0316141561039057600180546102d9908290610d74565b815481106102e9576102e9610de9565b600091825260209091200154600180546001600160a01b03909216918390811061031557610315610de9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600180548061035457610354610dd3565b600082815260208120820160001990810180546001600160a01b0319169055909101909155600280549161038783610d8b565b91905055505050565b8061039a81610da2565b915050610288565b505b50565b60005b6001548110156103a4576000600182815481106103c9576103c9610de9565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561041557600080fd5b505afa158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190610c2a565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561048657600080fd5b505afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be9190610c2a565b1115610526576003545a10156104d2575050565b806001600160a01b0316633cf80e6c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561050d57600080fd5b505af1158015610521573d6000803e3d6000fd5b505050505b508061053181610da2565b9150506103aa565b6103a26103a7565b3361054a610831565b6001600160a01b0316146105705760405162461bcd60e51b815260040161022290610d3f565b60008151116105915760405162461bcd60e51b815260040161022290610d18565b60005b81518110156103a2576105bf8282815181106105b2576105b2610de9565b6020026020010151610230565b806105c981610da2565b915050610594565b6001546060906000906001600160401b038111156105f1576105f1610dff565b60405190808252806020026020018201604052801561061a578160200160208202803683370190505b50905060005b600154811015610697576001818154811061063d5761063d610de9565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061066d5761066d610de9565b6001600160a01b03909216602092830291909101909101528061068f81610da2565b915050610620565b50919050565b6000606081805b6001548110156107db576000600182815481106106c3576106c3610de9565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610c2a565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561078057600080fd5b505afa158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610c2a565b11156107c85760019250506107db565b50806107d381610da2565b9150506106a4565b50604080516020810190915260008152909590945092505050565b336107ff610831565b6001600160a01b0316146108255760405162461bcd60e51b815260040161022290610d3f565b61082f6000610a47565b565b6000546001600160a01b031690565b6001818154811061085057600080fd5b6000918252602090912001546001600160a01b0316905081565b33610873610831565b6001600160a01b0316146108995760405162461bcd60e51b815260040161022290610d3f565b60008151116108ba5760405162461bcd60e51b815260040161022290610d18565b60005b81518110156103a2576108e88282815181106108db576108db610de9565b60200260200101516108fa565b806108f281610da2565b9150506108bd565b33610903610831565b6001600160a01b0316146109295760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b03811661094f5760405162461bcd60e51b815260040161022290610cef565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03841617905560028054916109a683610da2565b919050555050565b336109b7610831565b6001600160a01b0316146109dd5760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610222565b6103a4815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610aae57600080fd5b919050565b600060208284031215610ac557600080fd5b610ace82610a97565b9392505050565b60006020808385031215610ae857600080fd5b82356001600160401b0380821115610aff57600080fd5b818501915085601f830112610b1357600080fd5b813581811115610b2557610b25610dff565b8060051b604051601f19603f83011681018181108582111715610b4a57610b4a610dff565b604052828152858101935084860182860187018a1015610b6957600080fd5b600095505b83861015610b9357610b7f81610a97565b855260019590950194938601938601610b6e565b5098975050505050505050565b60008060208385031215610bb357600080fd5b82356001600160401b0380821115610bca57600080fd5b818501915085601f830112610bde57600080fd5b813581811115610bed57600080fd5b866020828501011115610bff57600080fd5b60209290920196919550909350505050565b600060208284031215610c2357600080fd5b5035919050565b600060208284031215610c3c57600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b81811015610c845783516001600160a01b031683529284019291840191600101610c5f565b50909695505050505050565b821515815260006020604081840152835180604085015260005b81811015610cc657858101830151858201606001528201610caa565b81811115610cd8576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b6020808252600d908201526c696e76616c696420617272617960981b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d8657610d86610dbd565b500390565b600081610d9a57610d9a610dbd565b506000190190565b6000600019821415610db657610db6610dbd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204ce9954d36d21be2f0450fc99cf63edf3041832c1801f8fe9a7501aacdbd288f64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c55760003560e01c80630b41672c146100ca5780633b7d0946146100df5780633bd54b47146100f25780634585e33b146100fa5780634b1641401461010d578063673a2a1f146101205780636e04ff0d1461013e5780636f682a531461015f578063715018a6146101765780638da5cb5b1461017e5780638f6675731461019e578063ac4afa38146101a7578063b36a4ab1146101ba578063d914cd4b146101cd578063f2fde38b146101e0575b600080fd5b6100dd6100d8366004610c11565b6101f3565b005b6100dd6100ed366004610ab3565b610230565b6100dd6103a7565b6100dd610108366004610ba0565b610539565b6100dd61011b366004610ad5565b610541565b6101286105d1565b6040516101359190610c43565b60405180910390f35b61015161014c366004610ba0565b61069d565b604051610135929190610c90565b61016860025481565b604051908152602001610135565b6100dd6107f6565b610186610831565b6040516001600160a01b039091168152602001610135565b61016860035481565b6101866101b5366004610c11565b610840565b6100dd6101c8366004610ad5565b61086a565b6100dd6101db366004610ab3565b6108fa565b6100dd6101ee366004610ab3565b6109ae565b336101fc610831565b6001600160a01b03161461022b5760405162461bcd60e51b815260040161022290610d3f565b60405180910390fd5b600355565b33610239610831565b6001600160a01b03161461025f5760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b0381166102855760405162461bcd60e51b815260040161022290610cef565b60005b6002548110156103a257816001600160a01b0316600182815481106102af576102af610de9565b6000918252602090912001546001600160a01b0316141561039057600180546102d9908290610d74565b815481106102e9576102e9610de9565b600091825260209091200154600180546001600160a01b03909216918390811061031557610315610de9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600180548061035457610354610dd3565b600082815260208120820160001990810180546001600160a01b0319169055909101909155600280549161038783610d8b565b91905055505050565b8061039a81610da2565b915050610288565b505b50565b60005b6001548110156103a4576000600182815481106103c9576103c9610de9565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561041557600080fd5b505afa158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190610c2a565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561048657600080fd5b505afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be9190610c2a565b1115610526576003545a10156104d2575050565b806001600160a01b0316633cf80e6c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561050d57600080fd5b505af1158015610521573d6000803e3d6000fd5b505050505b508061053181610da2565b9150506103aa565b6103a26103a7565b3361054a610831565b6001600160a01b0316146105705760405162461bcd60e51b815260040161022290610d3f565b60008151116105915760405162461bcd60e51b815260040161022290610d18565b60005b81518110156103a2576105bf8282815181106105b2576105b2610de9565b6020026020010151610230565b806105c981610da2565b915050610594565b6001546060906000906001600160401b038111156105f1576105f1610dff565b60405190808252806020026020018201604052801561061a578160200160208202803683370190505b50905060005b600154811015610697576001818154811061063d5761063d610de9565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061066d5761066d610de9565b6001600160a01b03909216602092830291909101909101528061068f81610da2565b915050610620565b50919050565b6000606081805b6001548110156107db576000600182815481106106c3576106c3610de9565b600091825260209182902001546040805163900cf0cf60e01b815290516001600160a01b039092169350839263900cf0cf92600480840193829003018186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610c2a565b816001600160a01b031663b97dd9e26040518163ffffffff1660e01b815260040160206040518083038186803b15801561078057600080fd5b505afa158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610c2a565b11156107c85760019250506107db565b50806107d381610da2565b9150506106a4565b50604080516020810190915260008152909590945092505050565b336107ff610831565b6001600160a01b0316146108255760405162461bcd60e51b815260040161022290610d3f565b61082f6000610a47565b565b6000546001600160a01b031690565b6001818154811061085057600080fd5b6000918252602090912001546001600160a01b0316905081565b33610873610831565b6001600160a01b0316146108995760405162461bcd60e51b815260040161022290610d3f565b60008151116108ba5760405162461bcd60e51b815260040161022290610d18565b60005b81518110156103a2576108e88282815181106108db576108db610de9565b60200260200101516108fa565b806108f281610da2565b9150506108bd565b33610903610831565b6001600160a01b0316146109295760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b03811661094f5760405162461bcd60e51b815260040161022290610cef565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03841617905560028054916109a683610da2565b919050555050565b336109b7610831565b6001600160a01b0316146109dd5760405162461bcd60e51b815260040161022290610d3f565b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610222565b6103a4815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610aae57600080fd5b919050565b600060208284031215610ac557600080fd5b610ace82610a97565b9392505050565b60006020808385031215610ae857600080fd5b82356001600160401b0380821115610aff57600080fd5b818501915085601f830112610b1357600080fd5b813581811115610b2557610b25610dff565b8060051b604051601f19603f83011681018181108582111715610b4a57610b4a610dff565b604052828152858101935084860182860187018a1015610b6957600080fd5b600095505b83861015610b9357610b7f81610a97565b855260019590950194938601938601610b6e565b5098975050505050505050565b60008060208385031215610bb357600080fd5b82356001600160401b0380821115610bca57600080fd5b818501915085601f830112610bde57600080fd5b813581811115610bed57600080fd5b866020828501011115610bff57600080fd5b60209290920196919550909350505050565b600060208284031215610c2357600080fd5b5035919050565b600060208284031215610c3c57600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b81811015610c845783516001600160a01b031683529284019291840191600101610c5f565b50909695505050505050565b821515815260006020604081840152835180604085015260005b81811015610cc657858101830151858201606001528201610caa565b81811115610cd8576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b6020808252600d908201526c696e76616c696420617272617960981b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d8657610d86610dbd565b500390565b600081610d9a57610d9a610dbd565b506000190190565b6000600019821415610db657610db6610dbd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204ce9954d36d21be2f0450fc99cf63edf3041832c1801f8fe9a7501aacdbd288f64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1304,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "pools",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1306,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "numberOfPools",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1308,
        "contract": "contracts/EpochAdvancer.sol:EpochAdvancer",
        "label": "gasPerPool",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}