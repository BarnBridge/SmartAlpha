{
  "address": "0x63F0c994938c700A477a1f3C5b7B6762a2Da4Ed2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oracleAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "args": [
    "0xD702DD976Fb76Fffc2D3963D037dfDae5b04E593"
  ],
  "solcInputHash": "db9c5199da5e6f14fdc5cc69d9b2dfeb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Implementation of an Oracle using ChainLink aggregators as a data source\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/ChainlinkOracle.sol\":\"ChainlinkOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2},\"remappings\":[]},\"sources\":{\"contracts/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\ninterface AggregatorV3Interface {\\n\\n    function decimals() external view returns (uint8);\\n    function description() external view returns (string memory);\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n    function latestRoundData()\\n    external\\n    view\\n    returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe25a6ac205964cbc6ba35a8b37c6b104cb698119b58f9dbaf79cc9125bb612c2\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\ninterface IPriceOracle {\\n    function getPrice() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3851c607e3979781522c3879056027850e63b319f5e5dd862cb88ec0d0fdce70\",\"license\":\"Apache-2.0\"},\"contracts/oracles/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.6;\\n\\nimport \\\"../interfaces/IPriceOracle.sol\\\";\\nimport \\\"../interfaces/AggregatorV3Interface.sol\\\";\\n\\n/// @title Implementation of an Oracle using ChainLink aggregators as a data source\\ncontract ChainlinkOracle is IPriceOracle {\\n    AggregatorV3Interface public oracle;\\n\\n    constructor (address oracleAddr) {\\n        require(oracleAddr != address(0), \\\"oracle cannot be 0x0\\\");\\n        oracle = AggregatorV3Interface(oracleAddr);\\n    }\\n\\n    function getPrice() public view override returns (uint256) {\\n        (, int price, , ,) = oracle.latestRoundData();\\n\\n        return uint256(price);\\n    }\\n}\\n\",\"keccak256\":\"0x7422aa5764392bda8f757cb040f8b8abc594fee1644a850335883c05eb3fb25b\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161029838038061029883398101604081905261002f916100ae565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601460248201527f6f7261636c652063616e6e6f7420626520307830000000000000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100de565b6000602082840312156100c057600080fd5b81516001600160a01b03811681146100d757600080fd5b9392505050565b6101ab806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637dc0d1d01461003b57806398d5fdca1461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610073610081565b604051908152602001610062565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156100c657600080fd5b505afa1580156100da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fe9190610125565b509195945050505050565b80516001600160501b038116811461012057600080fd5b919050565b600080600080600060a0868803121561013d57600080fd5b61014686610109565b945060208601519350604086015192506060860151915061016960808701610109565b9050929550929590935056fea2646970667358221220ef2e0417707fb2fc3351e5943b5d81fa879c80d3ed8fb18f0fb980724b8cb14a64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80637dc0d1d01461003b57806398d5fdca1461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610073610081565b604051908152602001610062565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b1580156100c657600080fd5b505afa1580156100da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fe9190610125565b509195945050505050565b80516001600160501b038116811461012057600080fd5b919050565b600080600080600060a0868803121561013d57600080fd5b61014686610109565b945060208601519350604086015192506060860151915061016960808701610109565b9050929550929590935056fea2646970667358221220ef2e0417707fb2fc3351e5943b5d81fa879c80d3ed8fb18f0fb980724b8cb14a64736f6c63430008060033"
}